server:
  port: 6666


spring:
  application:
    name: sec-kill-mq
  #数据源
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:mysql://119.23.204.78:3306/sec_kill?useUnicode=true&characterEncoding=utf8&useSSL=false
    username: root
    password: 123456
    driver-class-name: com.mysql.jdbc.Driver
  kafka:
    # 指定kafka代理地址，可以多个
    bootstrap-servers: 139.9.77.156:9092
    #consumer
    consumer:
      topic: result
      # 指定默认消费者group id
      group-id: test-consumer-group
      #连接超时
      session-timeout: 20000
      #消费模式
      auto-offset-reset: earliest
      #是否自动提交，如果为true，消费者的offset将在后台周期性的提交
      enable-auto-commit: false
      #自动提交时间间隔,
      auto-commit-interval: 100
      #消费线程数设置
      concurrency: 5
      #使用消费者组管理时poll()调用之间的最大延迟。
      max-poll-interval-ms: 5000
      #在单次调用poll()中返回的最大记录数。
      max-poll-records: 1
#mybatis
mybatis:
  mapper-locations: classpath:mappers/*.xml
  type-aliases-package: com.jsj.api.entity
#
#spring:
#  application:
#    name: panic-buy-mq
#  #redis缓存
#  redis:
#    database: 0
#    host: 119.23.204.78
#    port: 6379
#    jedis:
#      pool:
#        #连接池最大连接数
#        max-active: 2000
#        #连接池中的最大空闲连接
#        max-idle: 200
#        #连接池中的最小空闲连接
#        min-idle: 5
#    timeout: 3000
#  #kafka
#  kafka:
#    # 指定kafka代理地址，可以多个
#    bootstrap-servers: 139.9.77.156:9092
#    #provider
#    producer:
#      retries: 0
#      # 每次批量发送消息的数量
#      batch-size: 16384
#      buffer-memory: 33554432
#      # 指定消息key和消息体的编解码方式
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.apache.kafka.common.serialization.StringSerializer
#    #consumer
#    consumer:
#      # 指定默认消费者group id
#      group-id: test-consumer-group
#      auto-offset-reset: earliest
#      enable-auto-commit: true
#      auto-commit-interval: 100
#      # 指定消息key和消息体的编解码方式
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#demo:
#  mq:
#    version: 1.0.0

##自定义配置
#data:
#  #redis库存hash表的key
#  stock-hash-key: product_stocks
#  #redis分布式锁的key
#  redis-lock-key: panic_buy_lock
#  #zookeeper
#  zookeeper:
#    host: 139.9.77.156
#    port: 2181
#    timeout: 2000
#    #分布锁的根节点
#    lock-namespace: /panic_buy
#    #分布锁的key
#    lock-key: panic_buy_lock
