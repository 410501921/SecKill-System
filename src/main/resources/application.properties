# application.properties
# Server settings (ServerProperties)
server.port=8080
server.address=127.0.0.1
#server.sessionTimeout=30
server.servlet.context-path=/


# REDIS (RedisProperties)
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=127.0.0.1
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
#spring.redis.password=redis
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=3000
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=15000
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=10
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=0


#Mysql
#主数据源
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.url=jdbc:mysql://119.23.204.78:3306/panic_buy?useUnicode=true&characterEncoding=utf8&useSSL=false
spring.datasource.username=jsj
spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=20
#最小空闲数
spring.datasource.minIdle=0
#最大连接数
spring.datasource.maxActive=2000
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=2000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=true
spring.datasource.testOnReturn=true
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true
#为bean包下的类起别名
mybatis.type-aliases-package=com.jsj.entity
#mapper扫描位置
mybatis.mapper-locations=classpath:dao/*.xml


#rabbitmq上下文配置
spring.rabbitmq.host=127.0.0.1
spring.rabbitmq.port=5672
spring.rabbitmq.username=jsj
spring.rabbitmq.password=123456
spring.rabbitmq.publisher-confirms=true
spring.rabbitmq.virtual-host=/
spring.rabbitmq.template.exchange=seckillExchange
spring.rabbitmq.template.queueName=recordStorageStoQueue
spring.rabbitmq.template.routingKey=recordStorage

#指定一个请求能处理多少个消息
spring.rabbitmq.listener.direct.prefetch=1
#指定最大的消费者数量
spring.rabbitmq.listener.max-concurrency=100
#指定最小的消费者数量
spring.rabbitmq.listener.concurrency=1
